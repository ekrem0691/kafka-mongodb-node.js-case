version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: kafka_events
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  producer:
    build:
      context: ./producer
    container_name: producer
    environment:
      KAFKA_BROKER: broker:9092
      KAFKA_TOPIC: events_topic
    depends_on:
      - broker
    command: ["node", "index.js"]

  consumer:
    build:
      context: ./consumer
    container_name: consumer
    environment:
      KAFKA_BROKER: broker:9092
      KAFKA_TOPIC: events_topic
      KAFKA_GROUP_ID: consumer_group_1
      MONGO_URI: mongodb://mongodb:27017
      MONGO_DB_NAME: kafka_events
      MONGO_COLLECTION_NAME: events
    depends_on:
      - broker
      - mongodb
    command: ["node", "index.js"]

  api:
    build:
      context: ./api
    container_name: api
    environment:
      MONGO_URI: mongodb://mongodb:27017
      MONGO_DB_NAME: kafka_events
      MONGO_COLLECTION_NAME: events
      PORT: 3000
    depends_on:
      - mongodb
    ports:
      - "3000:3000"

volumes:
  mongo_data:
