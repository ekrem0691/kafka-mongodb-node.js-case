# Consumer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-consumer
  labels:
    app: kafka-mongodb-nodejs-consumer
spec:
  replicas: {{ .Values.consumer.replicas }}
  selector:
    matchLabels:
      app: kafka-mongodb-nodejs-consumer
  template:
    metadata:
      labels:
        app: kafka-mongodb-nodejs-consumer
    spec:
      containers:
        - name: consumer
          image: {{ .Values.consumer.image.repository }}:{{ .Values.consumer.image.tag }}
          ports:
            - containerPort: {{ .Values.consumer.service.port }}

---

# Producer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-producer
  labels:
    app: kafka-mongodb-nodejs-producer
spec:
  replicas: {{ .Values.producer.replicas }}
  selector:
    matchLabels:
      app: kafka-mongodb-nodejs-producer
  template:
    metadata:
      labels:
        app: kafka-mongodb-nodejs-producer
    spec:
      containers:
        - name: producer
          image: {{ .Values.producer.image.repository }}:{{ .Values.producer.image.tag }}
          ports:
            - containerPort: {{ .Values.producer.service.port }}

---

# API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app: kafka-mongodb-nodejs-api
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app: kafka-mongodb-nodejs-api
  template:
    metadata:
      labels:
        app: kafka-mongodb-nodejs-api
    spec:
      containers:
        - name: api
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          ports:
            - containerPort: {{ .Values.api.service.port }}
